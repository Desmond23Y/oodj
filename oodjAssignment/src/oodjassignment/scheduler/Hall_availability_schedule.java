/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodjassignment.scheduler;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import oodjassignment.Loginpage;

/**
 *
 * @author Acer
 */
public class Hall_availability_schedule extends javax.swing.JFrame {

    /**
     * Creates new form Hall_availability_schedule
     */
    public Hall_availability_schedule() {
        initComponents();
        String filePath = "src\\\\oodjassignment\\\\database\\\\Schedule.txt";
        File file = new File(filePath);

        try {
            // Create a BufferedReader to read the file
            BufferedReader br = new BufferedReader(new FileReader(file));

            // Get the table model from the JTable
            DefaultTableModel model = (DefaultTableModel) Aschedule.getModel();

            // Clear existing rows in the table model to prevent duplication
            model.setRowCount(0);

            // Read each line from the file and add it to the table model
            String line;
            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split("/"); // Adjust the delimiter if necessary
                model.addRow(dataRow);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Something went wrong: " + ex.getMessage());
}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Aschedule = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Remarks = new javax.swing.JTextField();
        Date = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        halltype = new javax.swing.JComboBox<>();
        ht = new javax.swing.JLabel();
        p = new javax.swing.JLabel();
        dt = new javax.swing.JLabel();
        filter = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        t = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        st = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        duration = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setPreferredSize(new java.awt.Dimension(1000, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logout.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(102, 102, 102));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodjassignment/picture/logout.png"))); // NOI18N
        logout.setText("Back");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        Aschedule.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Aschedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hall Type", "Price", "Date", "Time", "Duration", "Status", "Remarks"
            }
        ));
        Aschedule.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(Aschedule);
        if (Aschedule.getColumnModel().getColumnCount() > 0) {
            Aschedule.getColumnModel().getColumn(1).setMinWidth(80);
            Aschedule.getColumnModel().getColumn(1).setPreferredWidth(80);
            Aschedule.getColumnModel().getColumn(1).setMaxWidth(80);
            Aschedule.getColumnModel().getColumn(4).setMinWidth(85);
            Aschedule.getColumnModel().getColumn(4).setPreferredWidth(85);
            Aschedule.getColumnModel().getColumn(4).setMaxWidth(85);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 680, 520));

        jPanel2.setBackground(new java.awt.Color(0, 137, 248));

        Remarks.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Remarks.setForeground(new java.awt.Color(153, 153, 153));
        Remarks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Remarks.setText("Remarks");
        Remarks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                RemarksFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                RemarksFocusLost(evt);
            }
        });

        Date.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N

        Price.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        Add.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Reset.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Reset.setText("Clear");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Edit.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Save.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Save.setText("Update");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        halltype.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        halltype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auditorium", "Banquet Hall", "Meeting Room" }));
        halltype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halltypeActionPerformed(evt);
            }
        });

        ht.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        ht.setForeground(new java.awt.Color(255, 255, 255));
        ht.setText("Hall Type :");

        p.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        p.setForeground(new java.awt.Color(255, 255, 255));
        p.setText("Price :");

        dt.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        dt.setForeground(new java.awt.Color(255, 255, 255));
        dt.setText("Date :");

        filter.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        filter.setForeground(new java.awt.Color(153, 153, 153));
        filter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        filter.setText("Filter");
        filter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                filterFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                filterFocusLost(evt);
            }
        });
        filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search :");

        t.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        t.setForeground(new java.awt.Color(255, 255, 255));
        t.setText("Time :");

        time.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N

        st.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        st.setForeground(new java.awt.Color(255, 255, 255));
        st.setText("Status :");

        status.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Already Booking", "Under Maintenance" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Duration :");

        duration.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        duration.setPreferredSize(new java.awt.Dimension(122, 23));
        duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(ht)
                        .addGap(7, 7, 7)
                        .addComponent(halltype, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(p)
                        .addGap(37, 37, 37)
                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(dt)
                        .addGap(39, 39, 39)
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(t)
                        .addGap(37, 37, 37)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(11, 11, 11)
                                .addComponent(duration, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(st)
                                .addGap(28, 28, 28)
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10)
                                .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Add)
                                .addGap(8, 8, 8)
                                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(Save)))))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ht)
                    .addComponent(halltype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dt)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(st)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(Remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Add)
                    .addComponent(Edit)
                    .addComponent(Save))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Delete)
                    .addComponent(Reset))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 280, 580));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodjassignment/picture/blue.jpg"))); // NOI18N
        background.setText("jLabel1");
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RemarksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RemarksFocusGained
       if(Remarks.getText().equals("Remarks"))
        {
            Remarks.setText("");
            Remarks.setForeground(newColor(0,118,221));
        }
    }//GEN-LAST:event_RemarksFocusGained

    private void RemarksFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RemarksFocusLost
        if(Remarks.getText().equals(""))
        {
            Remarks.setText("Remarks");
            Remarks.setForeground(newColor(0,118,221));

        }
    }//GEN-LAST:event_RemarksFocusLost

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
         DefaultTableModel model = (DefaultTableModel) Aschedule.getModel();
        System.out.println("Row Selected: " +model.getValueAt(Aschedule.getSelectedRow(),3));
        halltype.setSelectedItem(model.getValueAt(Aschedule.getSelectedRow(), 0).toString());
        Price.setText(model.getValueAt(Aschedule.getSelectedRow(), 1).toString());
        Date.setText(model.getValueAt(Aschedule.getSelectedRow(), 2).toString());
        time.setText(model.getValueAt(Aschedule.getSelectedRow(), 3).toString());
        duration.setText(model.getValueAt(Aschedule.getSelectedRow(), 4).toString());
        status.setSelectedItem(model.getValueAt(Aschedule.getSelectedRow(), 5).toString());
        Remarks.setText(model.getValueAt(Aschedule.getSelectedRow(), 6).toString());
        System.out.println("Row Selected: " +Aschedule.getSelectedRow());
    }//GEN-LAST:event_EditActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        if(Remarks.getText().equals("")||Date.getText().equals("")||Price.getText().equals("")||time.getText().equals("")||duration.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Please Enter All Data !");
        }else{
        
        DefaultTableModel model = (DefaultTableModel) Aschedule.getModel();
        String[] record = {(String) halltype.getSelectedItem() , Price.getText(), Date.getText(), time.getText(), duration.getText(),(String) status.getSelectedItem(), Remarks.getText()};
        model.addRow(record);
        BufferedWriter bw;
        try {
            bw = new BufferedWriter(new FileWriter("src\\\\oodjassignment\\\\database\\\\Schedule.txt",true));
            String rec = (String) halltype.getSelectedItem() +"/"+ Price.getText() +"/"+ Date.getText() +"/"+ time.getText() +"/"+ duration.getText() +"/"+ (String) status.getSelectedItem() +"/"+ Remarks.getText();
            bw.write(rec+"\n");
            bw.close();
        } catch (IOException ex){
            JOptionPane.showMessageDialog(this,"Something Wrong");
                    }
        }
    }//GEN-LAST:event_AddActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) Aschedule.getModel();
        System.out.println("Row Selected: " + Aschedule.getSelectedRow());
        model.removeRow(Aschedule.getSelectedRow());
        int tablelist = model.getRowCount();
        try {
            BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\\\oodjassignment\\\\database\\\\Schedule.txt"));
            for (int i=0 ; i<tablelist ; i++){
                String rec = model.getValueAt(i, 0).toString()+"/"+model.getValueAt(i, 1).toString()+"/"+model.getValueAt(i, 2).toString()+"/"+model.getValueAt(i, 3).toString()+"/"+model.getValueAt(i, 4).toString()+"/"+model.getValueAt(i, 5).toString()+"/"+model.getValueAt(i, 6).toString();
                bw.write(rec+"\n");
            }  
            bw.close(); 
        } catch (IOException ex){
            JOptionPane.showMessageDialog(this,"Something Wrong");
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        setVisible(false);
        new Hall_availability_schedule().setVisible(true);
    }//GEN-LAST:event_ResetActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        DefaultTableModel model = (DefaultTableModel) Aschedule.getModel();
        int tablelist = model.getRowCount();
        System.out.println("Row Selected: "+ Aschedule.getSelectedRow());
        model.setValueAt((String) halltype.getSelectedItem(), Aschedule.getSelectedRow(), 0);
        model.setValueAt(Price.getText(), Aschedule.getSelectedRow(), 1);
        model.setValueAt(Date.getText(), Aschedule.getSelectedRow(), 2);
        model.setValueAt(time.getText(), Aschedule.getSelectedRow(), 3);
        model.setValueAt(duration.getText(), Aschedule.getSelectedRow(), 4);
        model.setValueAt((String)status.getSelectedItem(), Aschedule.getSelectedRow(), 5);
        model.setValueAt(Remarks.getText(), Aschedule.getSelectedRow(), 6);
        
        try {
            BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\\\oodjassignment\\\\database\\\\Schedule.txt"));
            for (int i=0 ; i<tablelist ; i++){
                String rec = model.getValueAt(i, 0).toString()+"/"+model.getValueAt(i, 1).toString()+"/"+model.getValueAt(i, 2).toString()+"/"+model.getValueAt(i, 3).toString()+"/"+model.getValueAt(i, 4).toString()+"/"+model.getValueAt(i, 5).toString()+"/"+model.getValueAt(i, 6).toString();
                bw.write(rec+"\n"); 
            }  
            bw.close(); 
        } catch (IOException ex){
            JOptionPane.showMessageDialog(this,"Something Wrong");
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Do you want to return to the Homepage?", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            setVisible(false);
            new schedulerhomepage().setVisible(true);
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void filterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterFocusGained
        if(filter.getText().equals("Filter"))
        {
            filter.setText("");
            filter.setForeground(newColor(0,118,221));
        }
    }//GEN-LAST:event_filterFocusGained

    private void filterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterFocusLost
        if(filter.getText().equals(""))
        {
            filter.setText("Filter");
            filter.setForeground(newColor(0,118,221));

        }
    }//GEN-LAST:event_filterFocusLost

    private void filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyReleased
        DefaultTableModel obj = (DefaultTableModel) Aschedule.getModel();
        TableRowSorter<DefaultTableModel> obj1=new TableRowSorter<>(obj);
        Aschedule.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(filter.getText()));
    }//GEN-LAST:event_filterKeyReleased

    private void halltypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halltypeActionPerformed
        calculatePrice();
    }//GEN-LAST:event_halltypeActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        Price.setEditable(false);
    }//GEN-LAST:event_PriceActionPerformed

    private void durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationActionPerformed
        calculatePrice();
    }//GEN-LAST:event_durationActionPerformed

    
     private void calculatePrice() {
        String hallType = (String) halltype.getSelectedItem();
        String timeText = duration.getText().trim();
        int hours = extractHours(timeText);

        if (hours == -1) {
            Price.setText("Invalid input");
            return;
        }

        int rate = 0;
        switch (hallType) {
            case "Auditorium":
                rate = 300;
                break;
            case "Banquet Hall":
                rate = 100;
                break;
            case "Meeting Room":
                rate = 50;
                break;
        }

        int totalPrice = rate * hours;
        Price.setText("RM " + totalPrice);
    }

    private int extractHours(String input) {
        // Use regex to find the number in the string
        Pattern pattern = Pattern.compile("(\\d+)");
        Matcher matcher = pattern.matcher(input);
        if (matcher.find()) {
            return Integer.parseInt(matcher.group(1));
        } else {
            return -1; // Return -1 if no number is found
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hall_availability_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hall_availability_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hall_availability_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hall_availability_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hall_availability_schedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTable Aschedule;
    private javax.swing.JTextField Date;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField Price;
    private javax.swing.JTextField Remarks;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Save;
    private javax.swing.JLabel background;
    private javax.swing.JLabel dt;
    private javax.swing.JTextField duration;
    private javax.swing.JTextField filter;
    private javax.swing.JComboBox<String> halltype;
    private javax.swing.JLabel ht;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JLabel p;
    private javax.swing.JLabel st;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JLabel t;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables

    private Color newColor(int i, int i0, int i1) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
