/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodjassignment.user;

import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

public class Payment extends javax.swing.JFrame {
    private HashMap<String, String> hallData = new HashMap<>();
   
    public Payment() {
    initComponents();

    hallType.setModel(new DefaultComboBoxModel<>(new String[] {"Auditorium", "Banquet Hall", "Meeting Room"}));
    hall.setModel(new DefaultComboBoxModel<>()); // Empty initially
    
    loadHallData();

    hallType.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evt) {
            hallTypeActionPerformed(evt);
        }
    });

    hall.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evt) {
            updatePrice(); // Call updatePrice when a hall is selected
        }
    });
    
    Price.setEditable(false);
    cfPrice.setEditable(false);
    }
    
    // Load hall data from the text file
    private void loadHallData() {
        String filePath = "src\\\\oodjassignment\\\\database\\\\Booking.txt";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split("/");
                if (data.length >= 5) {
                    String key = data[2].trim() + "," + data[3].trim(); // HallType,Hall
                    String price = data[4].trim(); // Price
                    hallData.put(key, price); // Store in the map
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */ 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cfPrice = new javax.swing.JTextField();
        pay = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        hall = new javax.swing.JComboBox<>();
        hallType = new javax.swing.JComboBox<>();
        Price = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Payment");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hall Type:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 100, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Hall:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Confirm Price:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, -1, -1));
        getContentPane().add(cfPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 420, 180, 30));

        pay.setBackground(new java.awt.Color(0, 137, 248));
        pay.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        pay.setForeground(new java.awt.Color(255, 255, 255));
        pay.setText("Pay");
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        getContentPane().add(pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 80, 30));

        logout.setBackground(new java.awt.Color(0, 137, 248));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodjassignment/picture/logout.png"))); // NOI18N
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 60, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, -1, -1));

        hall.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallActionPerformed(evt);
            }
        });
        getContentPane().add(hall, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 180, 30));

        hallType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hallType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallTypeActionPerformed(evt);
            }
        });
        getContentPane().add(hallType, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 212, 180, 30));
        getContentPane().add(Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 180, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oodjassignment/picture/blue.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hallActionPerformed

    private void hallTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallTypeActionPerformed
    String selectedHallType = hallType.getSelectedItem().toString();  // Use the correct component
    switch (selectedHallType) {
        case "Auditorium":
            hall.setModel(new DefaultComboBoxModel<>(new String[] {"HALL 1", "HALL 2", "HALL 3"}));
            break;
        case "Banquet Hall":
            hall.setModel(new DefaultComboBoxModel<>(new String[] {"HALL 1", "HALL 2", "HALL 3"}));
            break;
        case "Meeting Room":
            hall.setModel(new DefaultComboBoxModel<>(new String[] {"ROOM 1", "ROOM 2", "ROOM 3"}));
            break;
    }
    cfPrice.setText("");  // Clear the price field when hall type changes
    cfPrice.setText("");
    }//GEN-LAST:event_hallTypeActionPerformed

    
    private void updatePrice() {
        String selectedHallType = hallType.getSelectedItem().toString();
        String selectedHall = hall.getSelectedItem().toString();
        String key = selectedHallType + "," + selectedHall;

        // Check if the key exists in the hallData map and update the price fields
        if (hallData.containsKey(key)) {
            String selectedPrice = hallData.get(key);
            Price.setText(selectedPrice);
            cfPrice.setText(selectedPrice);  // Auto-fill Confirm Price with the same value
        } else {
            Price.setText("");   // Clear the price field if no match is found
            cfPrice.setText(""); // Clear the confirm price field if no match is found
        }
    }
     
     
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
    new 
    homepage().setVisible(true);
    dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        String selectedHallType = hallType.getSelectedItem().toString();
        String selectedHall = hall.getSelectedItem().toString();
        String selectedPrice = Price.getText();

        // Construct the string to save to the file
        String paymentData = "Hall Type: " + selectedHallType + ", Hall: " + selectedHall + ", Price: " + selectedPrice;

        // Save the data to payment.txt
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("src\\oodjassignment\\database\\payment.txt", true))) {
            writer.write(paymentData);
            writer.newLine();  // Write a new line after the payment data
            JOptionPane.showMessageDialog(null, "Payment successful! Please Review your receipt");

            // Call the method to generate the receipt
            generateReceipt(selectedHallType, selectedHall, selectedPrice);

            new homepage().setVisible(true);
            dispose();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error saving payment data.");
            e.printStackTrace();
        }
    }

    // Method to generate and display a receipt
    private void generateReceipt(String hallType, String hall, String price) {
        // Get the current date and time
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");

        // Create receipt details
        String receipt = "----------- Receipt -----------\n" +
                         "Date: " + dtf.format(now) + "\n" +
                         "Hall Type: " + hallType + "\n" +
                         "Hall: " + hall + "\n" +
                         "Price: " + price + "\n" +
                         "-------------------\n" +
                         "Thank you for your payment!";

        // Option 1: Display the receipt in a dialog box
        JOptionPane.showMessageDialog(null, receipt, "Payment Receipt", JOptionPane.INFORMATION_MESSAGE);
        new
        homepage().setVisible(true);
        dispose();
    }//GEN-LAST:event_payActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Price;
    private javax.swing.JLabel background;
    private javax.swing.JTextField cfPrice;
    private javax.swing.JComboBox<String> hall;
    private javax.swing.JComboBox<String> hallType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton logout;
    private javax.swing.JButton pay;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables



}
